name: Publish NuGet

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'
        
      - name: Build Dot.Raft.TestHarness.Tests
        run: dotnet build ./tests/Dot.Raft.TestHarness.Tests/Dot.Raft.TestHarness.Tests.csproj

      - name: Run Dot.Raft.TestHarness.Tests
        run: dotnet test ./tests/Dot.Raft.TestHarness.Tests --collect:"XPlat Code Coverage" --results-directory TestResults --logger:"trx;LogFileName=harness-tests.trx" --logger:"console;verbosity=detailed"

      - name: Build Dot.Raft.Tests
        run: dotnet build ./tests/Dot.Raft.Tests/Dot.Raft.Tests.csproj

      - name: Run Dot.Raft.Tests
        run: dotnet test ./tests/Dot.Raft.Tests --collect:"XPlat Code Coverage" --results-directory TestResults --logger:"trx;LogFileName=raft-tests.trx" --logger:"console;verbosity=detailed"
      
      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Tests Report
          path: "**/*.trx"
          reporter: dotnet-trx
          fail-on-error: true

      - name: ReportGenerator
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.0
        with:
          reports: '${{ github.workspace }}/TestResults/**/*.cobertura.xml'
          targetdir: '${{ github.workspace }}/coveragereport'
          reporttypes: 'MarkdownSummaryGithub'

      - name: Upload coverage into summary
        run: cat $GITHUB_WORKSPACE/coveragereport/SummaryGithub.md >> $GITHUB_STEP_SUMMARY

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          header: dot-raft-tests
          recreate: true
          path: '${{ github.workspace }}/coveragereport/SummaryGithub.md'

      - name: Archive code coverage results
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report
          path: '${{ github.workspace }}/TestResults/*.cobertura.xml'
